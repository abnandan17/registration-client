name: Maven Package upon a push 

on:
  workflow_dispatch:
    inputs:
      message: 
        description: 'Msg to intiate workflow'
        required: true        
  pull_request:
    types: [closed]
  push:
    branches:
      - '!release-branch'
      - release-1*
      - master
      - 1.*
      - develop
  
jobs:
  
  build_client:
    runs-on: ubuntu-latest
    env:
      NAMESPACE: mosipdev
      SERVICE_NAME: registration-client
      SERVICE_LOCATION: registration

    steps:
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

    - name: Setup branch and env
      run: |
        # Strip git ref prefix from version
        echo "BRANCH_NAME=$(echo ${{ github.ref }} | sed -e 's,.*/\(.*\),\1,')" >> $GITHUB_ENV
        echo "GPG_TTY=$(tty)" >> $GITHUB_ENV

    - name: Build image
      run: |
        cd "./${{env.SERVICE_LOCATION}}"
        docker build . --file Dockerfile --build-arg SOURCE=mosip --build-arg COMMIT_HASH=$(git rev-parse HEAD) --build-arg COMMIT_ID=$(git rev-parse --short HEAD) --build-arg BUILD_TIME=${{steps.date.outputs.date}} --tag ${{ env.SERVICE_NAME }}

    - name: Log into registry
      run: echo "${{ secrets.release_docker_hub }}" | docker login -u ${{ secrets.actor_docker_hub }} --password-stdin

    - name: Push image
      run: |
        IMAGE_ID=$NAMESPACE/$SERVICE_NAME

        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        echo "push version ${{steps.getPomVersion.outputs.info}}"
        if [[ $BRANCH_NAME == master ]]; then
            VERSION=latest
          else
            VERSION=$BRANCH_NAME
          fi
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag $SERVICE_NAME $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
    - uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,author,ref,job # selectable (default: repo,message)
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }} # required
      if: failure() # Pick up events even if the job fails or is canceled.
